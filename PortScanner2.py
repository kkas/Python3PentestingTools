#!/usr/bin/python3

import socket
import threading

def TCP_connect(ip, port, open_ports):
  s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
  s.settimeout(5)

  if not s.connect_ex((ip, port)):
    open_ports.append(port)

def get_open_ports(target, port_range, verbose=False):
  open_ports = []
  threads = []

  ip = socket.gethostbyname(target)

  for port in range(port_range[0], port_range[1]):
    t = threading.Thread(target=TCP_connect, args=(ip, port, open_ports))
    threads.append(t)

  for t in threads:
    t.start()
  
  for t in threads:
    t.join()

  if verbose:
    output = ""

    if len(open_ports) > 0:
      output = """Open ports for {} ({})
      {:<9}{:<7}""".format(target, ip, "PORT", "SERVICE")

      for port in open_ports:
        output += ("{:<9}{:<7}".format(port, ports_and_services[port]))

    return output

  else:
    return(open_ports) 

ports_and_services = {
    7: 'echo',
    20: 'ftp',
    21: 'ftp',
    22: 'ssh',
    23: 'telnet',
    25: 'smtp',
    43: 'whois',
    53: 'dns',
    67: 'dhcp',
    68: 'dhcp',
    80: 'http',
    110: 'pop3',
    123: 'ntp',
    137: 'netbios',
    138: 'netbios',
    139: 'netbios',
    143: 'imap4',
    443: 'https',
    513: 'rlogin',
    540: 'uucp',
    554: 'rtsp',
    587: 'smtp',
    873: 'rsync',
    902: 'vmware',
    989: 'ftps',
    990: 'ftps',
    1194: 'openvpn',
    3306: 'mysql',
    5000: 'unpn',
    8080: 'https-proxy',
    8443: 'https-alt'
}
